{"version":3,"sources":["api/youtube.js","components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/Loading.js","components/App.js","index.js"],"names":["axios","create","baseURL","SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","htmlFor","type","id","name","placeholder","onChange","React","Component","VideoItem","video","onVideoSelect","snippet","title","description","thumbnails","onClick","src","default","url","alt","VideoList","videos","renderList","map","key","videoId","VideoDetail","videoSrc","Loading","height","count","Array","fill","item","i","width","style","marginLeft","App","selectedVideo","a","youtube","get","params","part","maxResults","process","q","response","data","items","renderLoading","length","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fae31a2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://www.googleapis.com/youtube/v3'\r\n  // params: {\r\n  //   maxResults: 5,\r\n  //   key: 'AIzaSyBFr4ktwpJY002onP9We0VT3xioSud-RTE'\r\n  // }\r\n});\r\n","import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ term: event.target.value });\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onFormSubmit(this.state.term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label htmlFor=\"search\">Search</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"search\"\r\n              name=\"search\"\r\n              placeholder=\"Search...\"\r\n              value={this.state.term}\r\n              onChange={this.onInputChange}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import './VideoItem.css';\r\nimport React from 'react';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n  const { title, description, thumbnails } = video.snippet;\r\n  return (\r\n    <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n      <img\r\n        className=\"ui image\"\r\n        src={thumbnails.default.url}\r\n        alt={description}\r\n      />\r\n      <div className=\"content\">\r\n        <div className=\"header\">{title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoItem;\r\n","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  const renderList = videos.map(video => {\r\n    return (\r\n      <VideoItem\r\n        key={video.id.videoId}\r\n        video={video}\r\n        onVideoSelect={onVideoSelect}\r\n      />\r\n    );\r\n  });\r\n  return <div className=\"ui middle aligned selection list\">{renderList}</div>;\r\n};\r\n\r\nexport default VideoList;\r\n","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n  if (!video) return 'Loading...';\r\n\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ui embed\">\r\n        <iframe title=\"Video Player\" src={videoSrc} />\r\n      </div>\r\n      <div className=\"ui segment\">\r\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nconst CardLoading = () => {\r\n  return Array(5)\r\n    .fill()\r\n    .map((item, i) => {\r\n      return (\r\n        <div className=\"video-item item\" key={i}>\r\n          <Skeleton width={100} height={100} />\r\n          <div className=\"content\">\r\n            <div className=\"ui header\" style={{ marginLeft: '5px' }}>\r\n              <Skeleton width={200} count={3} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n};\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"ui row\">\r\n      <div className=\"eleven wide column\">\r\n        <div>\r\n          <Skeleton height={350} />\r\n          <div className=\"ui segment\">\r\n            <h4 className=\"ui header\">\r\n              <Skeleton />\r\n            </h4>\r\n            <p>\r\n              <Skeleton count={2} />\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"five wide column\">\r\n        <div className=\"ui list\">{CardLoading()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport youtube from '../api/youtube';\r\nimport SearchBar from './SearchBar';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport Loading from './Loading';\r\n\r\nclass App extends React.Component {\r\n  state = { videos: [], selectedVideo: null };\r\n\r\n  componentDidMount() {\r\n    this.onFormSubmit('Cartoon');\r\n  }\r\n\r\n  onFormSubmit = async (term) => {\r\n    const response = await youtube.get('/search', {\r\n      params: {\r\n        part: 'snippet',\r\n        maxResults: 5,\r\n        key: process.env.REACT_APP_KEY,\r\n        q: term\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      videos: response.data.items,\r\n      selectedVideo: response.data.items[0]\r\n    });\r\n  };\r\n\r\n  onVideoSelect = (video) => {\r\n    this.setState({ selectedVideo: video });\r\n  };\r\n\r\n  renderLoading = () => {\r\n    if (!this.state.videos.length) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div className=\"ui row\">\r\n          <div className=\"eleven wide column\">\r\n            <VideoDetail video={this.state.selectedVideo} />\r\n          </div>\r\n          <div className=\"five wide column\">\r\n            <VideoList\r\n              onVideoSelect={this.onVideoSelect}\r\n              videos={this.state.videos}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: '10px' }}>\r\n        <SearchBar onFormSubmit={this.onFormSubmit} />\r\n        <div className=\"ui grid\">{this.renderLoading()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n"],"sourceRoot":""}